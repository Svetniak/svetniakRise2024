def keyConf():
return keys = [
#-------SPAWN APPS----------------------------------------------------------------------
    Key([mod, "control"], "f", lazy.spawn("brave"), desc="Launch Firefox Web browser"),
    Key([mod], "e", lazy.spawn("thunar"), desc="Launch Thunar File browser"),
    Key([mod, "control"], "t", lazy.spawn("thunderbird"), desc="Launch Thunderbird email app"),
    Key([mod, "control"], "b", lazy.spawn("blender"), desc="Launch Thunar 3D modeling"),
    Key([mod, "control"], "i", lazy.spawn("inkscape"), desc="Launch Inkscape Graphics editor"),
    Key([mod, "control"], "g", lazy.spawn("gimp"), desc="Launch GIMP Image Editor"),
    Key([mod, "control"], "v", lazy.spawn("virtualbox"), desc="Launch Virtua Box Image Editor"),
    Key([mod, "control"], "z", lazy.spawn("filezilla"), desc="Launch Filezilla file manager"),

    Key([mod, "control"], "w", lazy.spawn("libreoffice --writer"), desc="Launch Writer word processing"),
    Key([mod, "control"], "c", lazy.spawn("libreoffice --calc"), desc="Launch Calc Spread Sheets"),
    Key([mod, "control"], "i", lazy.spawn("libreoffice --impress"), desc="Launch Impress presentation"),

    Key([mod], "Escape", lazy.spawn('xkill')),
    Key([mod], "Return", lazy.spawn(myterm), desc="Launch myterm"),
    Key([mod, "control"], "Return", lazy.spawn("wezterm"), desc="Launch myterm"),

    Key([mod], "space", lazy.spawn("rofi -show drun"), desc="App Launcher"),
    Key([mod, "control"], "p", lazy.spawn("/home/ikki/.config/rofi/powermenu.sh"), desc="Log out"),
#-------ACTIONS-------------------------------------------------------------------------
     Key([mod, "shift"], "p", lazy.spawn("pactl set-sink-volume bluez_output.74_2A_8A_10_6D_FC.1 +5%"), desc="Volume Up"),
     Key([mod, "shift"], "o", lazy.spawn("pactl set-sink-volume bluez_output.74_2A_8A_10_6D_FC.1 -5%"), desc="Volume Down"),
     Key([mod, "shift"], "s", lazy.spawn("flameshot gui"), desc="Volume Down"),

#-------SCREEN--------------------------------------------------------------------------------
    Key([mod], "h", lazy.layout.left(), desc="Move focus to left"),
    Key([mod], "l", lazy.layout.right(), desc="Move focus to right"),
    Key([mod], "j", lazy.layout.down(), desc="Move focus down"),
    Key([mod], "k", lazy.layout.up(), desc="Move focus up"),
#    Key([mod], "space", lazy.layout.next(), desc="Move window focus to other window"),

    Key([mod, "shift"], "h", lazy.layout.shuffle_left(), desc="Move window to the left"),
    Key([mod, "shift"], "l", lazy.layout.shuffle_right(), desc="Move window to the right"),
    Key([mod, "shift"], "j", lazy.layout.shuffle_down(), desc="Move window down"),
    Key([mod, "shift"], "k", lazy.layout.shuffle_up(), desc="Move window up"),

    Key([mod, "control"], "h", lazy.layout.grow_left(), desc="Grow window to the left"),
    Key([mod, "control"], "l", lazy.layout.grow_right(), desc="Grow window to the right"),
    Key([mod, "control"], "j", lazy.layout.grow_down(), desc="Grow window down"),
    Key([mod, "control"], "k", lazy.layout.grow_up(), desc="Grow window up"),
    Key([mod], "n", lazy.layout.normalize(), desc="Reset all window sizes"),

    Key([mod, "control"], "l",
        lazy.layout.grow_right(),
        lazy.layout.grow(),
        lazy.layout.increase_ratio(),
        lazy.layout.delete(),
        ),
    Key([mod, "control"], "Right",
        lazy.layout.grow_right(),
        lazy.layout.grow(),
        lazy.layout.increase_ratio(),
        lazy.layout.delete(),
        ),
    Key([mod, "control"], "h",
        lazy.layout.grow_left(),
        lazy.layout.shrink(),
        lazy.layout.decrease_ratio(),
        lazy.layout.add(),
        ),
    Key([mod, "control"], "Left",
        lazy.layout.grow_left(),
        lazy.layout.shrink(),
        lazy.layout.decrease_ratio(),
        lazy.layout.add(),
        ),
    Key([mod, "control"], "k",
        lazy.layout.grow_up(),
        lazy.layout.grow(),
        lazy.layout.decrease_nmaster(),
        ),
    Key([mod, "control"], "Up",
        lazy.layout.grow_up(),
        lazy.layout.grow(),
        lazy.layout.decrease_nmaster(),
        ),
    Key([mod, "control"], "j",
        lazy.layout.grow_down(),
        lazy.layout.shrink(),
        lazy.layout.increase_nmaster(),
        ),
    Key([mod, "control"], "Down",
        lazy.layout.grow_down(),
        lazy.layout.shrink(),
        lazy.layout.increase_nmaster(),
        ),


    Key([mod, "shift"], "Return", lazy.layout.toggle_split(), desc="Toggle between split and unsplit sides of stack",),
    Key([mod], "Tab", lazy.next_layout(), desc="Toggle between layouts"),
    Key([mod], "q", lazy.window.kill(), desc="Kill focused window"),
    Key(
        [mod],
        "f",
        lazy.window.toggle_fullscreen(),
        desc="Toggle fullscreen on the focused window",
    ),
    Key([mod], "t", lazy.window.toggle_floating(), desc="Toggle floating on the focused window"),
    Key([mod, "control"], "r", lazy.reload_config(), desc="Reload the config"),
    Key([mod, "control"], "q", lazy.shutdown(), desc="Shutdown Qtile"),
    Key([mod], "r", lazy.spawncmd(), desc="Spawn a command using a prompt widget"),
]

