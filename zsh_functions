#Etracting Archived files
extract () {
     if [ -f $1 ] ; then
         case $1 in
             *.tar.bz2)   tar xjf $1     ;;
             *.tar.gz)    tar xzf $1     ;;
             *.bz2)       bunzip2 $1     ;;
             *.rar)       rar x $1       ;;
             *.gz)        gunzip $1      ;;
             *.tar)       tar xf $1      ;;
             *.tbz2)      tar xjf $1     ;;
             *.tgz)       tar xzf $1     ;;
             *.zip)       unzip $1       ;;
             *.Z)         uncompress $1  ;;
             *.7z)        7z x $1    ;;
             *)           echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

#Sourcing fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

function mkt(){
	mkdir {nmap,content,exploits,scripts}
}

# Extract nmap information
function extractPorts(){
	ports="$(cat $1 | grep -oP '\d{1,5}/open' | awk '{print $1}' FS='/' | xargs | tr ' ' ',')"
	ip_address="$(cat $1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | head -n 1)"
	echo -e "\n[*] Extracting information...\n" > extractPorts.tmp
	echo -e "\t[*] IP Address: $ip_address"  >> extractPorts.tmp
	echo -e "\t[*] Open ports: $ports\n"  >> extractPorts.tmp
	echo $ports | tr -d '\n' | xclip -sel clip
	echo -e "[*] Ports copied to clipboard\n"  >> extractPorts.tmp
	cat extractPorts.tmp; rm extractPorts.tmp
}

# Set 'man' colors
function man() {
    env \
    LESS_TERMCAP_mb=$'\e[01;31m' \
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    man "$@"
}

# fzf improvement
function fzf-lovely(){

	if [ "$1" = "h" ]; then
		fzf -m --reverse --preview-window down:20 --preview '[[ $(file --mime {}) =~ binary ]] &&
 	                echo {} is a binary file ||
	                 (bat --style=numbers --color=always {} ||
	                  highlight -O ansi -l {} ||
	                  coderay {} ||
	                  rougify {} ||
	                  cat {}) 2> /dev/null | head -500'

	else
	        fzf -m --preview '[[ $(file --mime {}) =~ binary ]] &&
	                         echo {} is a binary file ||
	                         (bat --style=numbers --color=always {} ||
	                          highlight -O ansi -l {} ||
	                          coderay {} ||
	                          rougify {} ||
	                          cat {}) 2> /dev/null | head -500'
	fi
}

#Deleting files completely
function rmk(){
	scrub -p dod $1
	shred -zun 10 -v $1
}

#Install all programs from script
function hopping(){
#	echo -e "UPDATING SYSTEM"
#	sleep 2
#	sudo pacman -Syyu
#
#	echo -e "INSTALLING SHELL UTILITIES"
#	sleep 2
#	sudo pacman -S zsh wezterm neofetch exa btop zsh-syntax-highlighting zsh-autosuggestions -y
#	
#	echo -e "INSTALLING WINDOW MANAGER & TOOLS"
#	sleep 2
#	sudo pacman -S qtile rofi picom
#
#	echo -e "INSTALLING WEB BROWSERS"
#	sleep 2
#	sudo pacman -S chromium firefox brave-browser filezilla 
#
#	echo -e "INSTALLING OFFICE APPS"
#	sleep 2
#	sudo pacman -S libreoffice thunderbird 
#
#	echo -e "INSTALLING GRAPHICS"
#	sleep 2
#	sudo pacman -S inkscape gimp blender
#
#	echo -e "INSTALLING DEVELOPMENT APPS"
#	sleep 2
#	sudo pacman -S godot neovim

#	repoDir="~/.repos"
#	if[ -d "$repoDir" ]; then
#		echo "directory exists"
}
